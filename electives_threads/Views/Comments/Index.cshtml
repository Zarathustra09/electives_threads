@model List<electives_threads.Models.Comment>

@{
    ViewData["Title"] = "Comment Index";
}

@if (Model == null || Model.Count == 0)
{
        <p>No comments found.</p>
}
else
{
        <div class="container mt-4">
        @foreach (var comment in Model)
        {
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title"> @ViewBag.Username</h5>
                            <p class="card-text">@comment.Content</p>
                            <p class="card-text"><small class="text-muted">Likes: @comment.Likes | Dislikes: @comment.Dislikes</small></p>
                            <p class="card-text"><small class="text-muted">Created: @comment.CreatedAt.ToString("MMM dd, yyyy")</small></p>
                            <p class="card-text"><small class="text-muted">Age: @CalculateAge(comment.CreatedAt)</small></p>

                                    <div>
                            <strong>Comment By:</strong> @ViewBag.UserNames[comment.CommentID]
                        </div>

                            <!-- Like and Dislike buttons -->
                            <form method="post" asp-action="Like" asp-route-commentId="@comment.CommentID">
                                <button type="submit" class="btn btn-outline-success btn-sm mr-2">Like</button>
                            </form>

                            <form method="post" asp-action="Dislike" asp-route-commentId="@comment.CommentID">
                                <button type="submit" class="btn btn-outline-danger btn-sm">Dislike</button>
                            </form>
                        </div>
                    </div>
        }
        </div>
}

<a asp-action="Create" class="btn btn-primary">Create Comment</a>

@functions {
    public string CalculateAge(DateTime createdAt)
    {
        var age = DateTime.Now - createdAt;
        if (age.Days > 0)
        {
            return $"{age.Days} days ago";
        }
        else if (age.Hours > 0) 
        {
            return $"{age.Hours} hours ago";
        }
        else
        {
            return $"{age.Minutes} minutes ago";
        }
    }
}
